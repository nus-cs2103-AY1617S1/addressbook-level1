##########################################################
# invalid command
##########################################################

  # should recognise invalid command
  sfdfd

##########################################################
# help command
##########################################################

  # should display help message
  help

##########################################################
# clean and check state
##########################################################

  # address book should be emptied
  clear
  list

##########################################################
# test add person command, setup state for futuer tests
##########################################################

  # should catch invalid args format
  add wrong args wrong args
  add Valid Name p/12345 valid@email.butNoPrefix
  add Valid Name 12345 e/valid@email.butPhonePrefixMissing
  
  # should catch invalid person data
  add []\[;] p/12345 e/valid@e.mail
  add Valid Name p/not_numbers e/valid@e.mail
  add Valid Name p/12345 e/notAnEmail

  # should add correctly
  add Betsy Choo p/222222 e/benchoo@nus.edu.sg
  list
  add Adam Brown p/111111 e/adam@gmail.com
  list

  # should list in alphabetical order
  sort

  # order of phone and email should not matter
  add Charlie Dickson e/charlie.d@nus.edu.sg p/333333
  list
  sort
  add Esther Potato p/555555 e/esther@notreal.potato
  list
  sort
  add Dickson Ee e/dickson@nus.edu.sg p/444444
  list
  sort

##########################################################
# test edit persons command
##########################################################
  list
  # should catch invalid args format
  edit asdf Xiao Pu
  edit 1

  # should catch invalid person data
  edit 1 []/ew
  edit 1 p/invalid phone
  edit 1 e/invalid email
  edit 1 []/ew p/invalid_phone e/invalid_eamil
  edit 1 []/ew p/12345678 e/acesscp@gmail.com

  # should edit correctly
  edit 1 Davin p/12345678 e/davin@gmail.com
  list
  edit 5 Xiao Pu p/666666 e/xp@gmail.com
  list
  edit 4 Ester Egg
  list
  edit 3 p/123456
  list
  edit 2 e/beechoo1@gmail.com
  list

  # order of phone and email should not matter
  edit 1 e/davin1@gmail.com p/12345555
  list
  edit 5 Xiao Pu e/xp1@gmail.com
  list
  edit 4 Ester Egg Two p/6666667
  list

  # should catch error if index is invalid
  edit -1 Xiao Pu
  edit 10000 xp
  list
  edit 6 Xiao Pu

  # should catch error if it is not exist
  add Xiao Pu Test p/88888888 e/xp8888@gmail.com
  list
  delete 6
  edit 6 Xiao Pu Yes p/12345678

  edit 1 betsy
  edit 2 Adam Dickson
  add Xiao Pu Test p/88888888 e/xp8888@gmail.com

##########################################################
# test find persons command
##########################################################

  # should match none with no keywords
  find
  # should only match full words in person names
  find bet
  # does not match if none have keyword
  find 23912039120
  # matching should be case insensitive
  find betsy

  # find unique keyword
  find Betsy
  # find multiple with same keyword
  find Dickson
  # find multiple with some keywords
  find Xiao Pu

##########################################################
# test delete person command
##########################################################

# last active view: [1] betsy [2] charlie

  # should catch invalid args format
  delete
  delete should be only one number

  # should catch invalid index
  delete -1
  delete 0
  delete 3

  # should catch attempt to delete something already deleted
  delete 2
  delete 2

  # should have deleted based on last active view's index
  list

  # deletes correct person
  delete 4
  list

  # listing indexes get updated on next request
  delete 1
  list

##########################################################
# test clear command
##########################################################

  # clears all
  clear
  list

##########################################################
# test exit command
##########################################################

  # exits properly
  exit
  list